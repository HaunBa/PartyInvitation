@page "/Invitation/{UserHash}"

@inject NavigationManager _nav
@inject IPersonService _person
@inject IRequestService _req

@code {
    [Parameter]
    public string UserHash { get; set; }

    public Person Person { get; set; } = new();
    List<Request> Requests = new();
    string input = "";
    int amount = 1;

    int accepted = 0;
    int maybe = 0;
    int declined = 0;

    List<int> PeopleCount = new();

    int state = 0;

    void SetState(int num){
        state = num;

        InvokeAsync(StateHasChanged);
    }

    void AddToList(){
        var req = new Request()
        {
            RequestAmount = amount,
            RequestArticle = input
        };

        Requests.Add(req);

        InvokeAsync(StateHasChanged);
    }

    void Submit(){

        foreach (var item in Requests)
        {
            _req.AddRequestToPerson(item, UserHash);
        }

        switch (state)
        {
            case 1:
                _person.SetPersonToComing(UserHash);
                break;
            case 2:
                _person.SetPersonToMaybe(UserHash);
                break;
            case 3:
                _person.SetPersonToDeclined(UserHash);
                break;
            default:
                break;
        }

        _nav.NavigateTo("");
    }

    void RemoveFromList(string articleName){
        Requests.Remove(Requests.First(x => x.RequestArticle.Equals(articleName)));

        InvokeAsync(StateHasChanged);
    }

    protected override async void OnInitialized()
    {
        for (int i = 0; i < 6; i++)
        {
            PeopleCount.Add(0);
        }
        var person = await _person.GetPersonByHash(UserHash);
        if (person == null) _nav.NavigateTo("~/");

        //if (!await _person.IsPersonAllowed(UserHash)) {
        //    _nav.NavigateTo("");
        //    return;
        //};
        
        PeopleCount = await _person.GetAllReports();

        Person = person;
    }
}

<div class="container">
    <div class="row text-center">
        <!-- Greeting -->
        <h1>Hallo @Person.PersonName !</h1>
    </div>
    <div class="row text-center mt-5">
        <!-- Text -->
        <h3>Hier steht Text : )</h3>
    </div>
    <div class="row justify-content-center mt-5">
        <!-- Form -->

        <div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Anzahl</th>
                        <th scope="col">Löschen</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Requests)
                    {
                        <tr>
                            <td>@item.RequestArticle</td>
                            <td>@item.RequestAmount</td>
                            <td><button class="btn btn-danger" @onclick="() => RemoveFromList(item.RequestArticle)">Löschen</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="row justify-content-center mb-5">
            <div class="col-4" >
                <input @bind=amount type="number" min="1" class="form-control" />
                <input @bind=input type="text" class="form-control"/>

            </div>
            <div class="col-4">
                <button class="btn btn-primary" @onclick="() => AddToList()"> Add </button>
            </div>
        </div>

        <div class="col">
            <button class="@(state == 1 ? "btn btn-success" : "btn btn-outline-success")" @onclick="() => SetState(1)">Zusagen</button>
        </div>
        <div class="col">
            <button class="@(state == 2 ? "btn btn-warning" : "btn btn-outline-warning")" @onclick="() => SetState(2)"> Vielleicht</button>
        </div>
        <div class="col">
            <button class="@(state == 3 ? "btn btn-danger" : "btn btn-outline-danger")" @onclick="() => SetState(3)"> Absage</button>
        </div>
    </div>
    <div class="row mb-5">
        <!-- Statistics -->

        <h3>Anzahl Eingeladener: @PeopleCount[0]</h3>
        <h3>Noch nicht Zu/ Abgesagt: @PeopleCount[1]</h3>
        <h3>Zugesagt : @PeopleCount[2]</h3>
        <h3>Vielleicht: @PeopleCount[3]</h3>
        <h3>Abgesagt: @PeopleCount[4]</h3>
    </div>

    <div class="row justify-content-center">
        <button type="button" class="btn btn-primary w-50 center" data-bs-toggle="modal" data-bs-target="#submitContext">
            Abschließen
        </button>

        <!-- Modal -->
        <div class="modal fade" id="submitContext" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Willst du den Vorgang abschließen?</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Bist du dir sicher, dass du alles richtig eingegeben hast?
                        Nach dem Abschicken können deine Eingaben nicht mehr geändert werden.
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Schließen</button>
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="() => Submit()" >Abschicken</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>